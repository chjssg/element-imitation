@import "function";
@import "../common/var";


/* Break-points
 -------------------------- */
 @mixin res($key, $map: $--breakpoints) {
  // 循环断点Map，如果存在则返回
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "Undefeined points: `#{$map}`";
  }
}


/* BEM
 -------------------------- */
@mixin b($block) {
  $B: $namespace+'-'+$block !global;

  .#{$B} {
    @content;
  }
}

// @mixin e($element) {
//   $E: $element !global;
//   $selector: &;
//   $currentSelector: "";
//   @each $unit in $element {
//     $currentSelector: #{$currentSelector + "." + $B + $element-separator + $unit + ","};
//   }

//   @if hitAllSpecialNestRule($selector) {
//     @at-root {
//       #{$selector} {
//         #{$currentSelector} {
//           @content;
//         }
//       }
//     }
//   } @else {
//     @at-root {
//       #{$currentSelector} {
//         @content;
//       }
//     }
//   }
// }

@mixin m($modifier) {
  $selector: &;
  $currentSelector: "";
  @each $unit in $modifier {
    //  &--***,&--***
    $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ","};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}



@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

